/*
 * kernel.h
 *
 *  Created on: Sep 11, 2016
 *      Author: KSSKOU001: Hermann
 */

#ifndef KERNEL_H_
#define KERNEL_H_


/*
 * Kernel initial configuration
 */
void kernelInit(void) {

    GPIO_Config();

	/* Enable the clock for port B*/
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);

	GPIO_InitTypeDef GPIO_InitStructure;

	/* Configure Button pin as input */
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;		// Input mode
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		// Push - Pull
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;	// To detect a logic high

	// Pins 0-8 on port B (9 in total)
	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_0
			| GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3
			| GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6
			| GPIO_PIN_7	| GPIO_PIN_8;
	GPIO_Init(GPIOB, &GPIO_InitStructure);
}

/*
 * COnfigure the mode selection
 */
void GPIO_Config() {
	/* Enable the clock for port B*/
		RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
		RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);

		GPIO_InitTypeDef GPIO_InitStructure;

		/* Configure Button pin as input */
		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;		// Input mode
		GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		// Push - Pull
		GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;	// To detect a logic high

		// Pins 0-8 on port B (9 in total)
		GPIO_InitStructure.GPIO_Pin = GPIO_PIN_0;
		GPIO_Init(GPIOB, &GPIO_InitStructure);
}

#endif /* KERNEL_H_ */
